@page "/tipodeaccesorio/guardar"
@using AccesoriosApp.DTOs
@using AccesoriosApp.Services
@rendermode InteractiveServer

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject TipoDeAccesorioService tipoDeAccesoriosService;

<h3>Guardar Tipo de Accesorio</h3>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="mt-3 alert alert-danger">@errorMessage</div>
}
<EditForm Model="@tipodeaccesorio" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre:</label>
        <InputText id="nombre" class="form-control" @bind-Value="tipodeaccesorio.Nombre" required />
    </div>

    <button type="submit" class="btn btn-primary">Guardar Tipo de Accesorio</button>
    <NavLink href="/accesorios" class="btn btn-secondary">Cancelar</NavLink>
</EditForm>

@inject NavigationManager navigationManager;
@code {
    private TipoDeAccesorioDTO tipodeaccesorio = new TipoDeAccesorioDTO();
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
      var result =  await tipoDeAccesoriosService.CreateTipodeAccesorio(tipodeaccesorio);

        navigationManager.NavigateTo("/tipodeaccesorios");
    }

       
}
