@page "/"
@layout LoginLayout
@rendermode InteractiveServer

@using AccesoriosApp.Components.Layout
@using AccesoriosApp.DTOs
@using AccesoriosApp.Services

<PageTitle>Login</PageTitle>

<div style="heigth:300px" class="d-flex justify-content-center align-items-center">
    <div class="image-container">
        <div class="login-left" style="position:relative;overflow:hidden;">
            <link href="css/style.css" rel="stylesheet" />
            <img src="img/flores.jpg" alt="" style="object-fit: cover;" class="side-image" />
        </div>
        <div class="login-right">
            <div class="login-form">
                <h2>Bienvenido</h2>
                <EditForm Model="authDTO" OnValidSubmit="login">
                    <div class="mb-3">
                        <label class="form-label">Nombre de usuario</label>
                        <InputText class="form-control" @bind-Value="authDTO.login" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Contraseña</label>
                        <InputText class="form-control" type="password" @bind-Value="authDTO.clave" />
                    </div>
                    <button type="submit" class="btn btn-primary">Iniciar Sesión</button>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                            <div class="mt-3 alert alert-danger">@errorMessage</div>
                    }
                </EditForm>
            </div>
        </div>
    </div>
</div>

@inject AuthServices authService;
@inject NavigationManager navigationManager;
@code {
    private AuthDTO authDTO = new AuthDTO();
    private string errorMessage;

    private async Task login()
    {
        Console.WriteLine("Hola");
        var token = await authService.Login(authDTO);
        Console.WriteLine(token);
        if (string.IsNullOrEmpty(token.token))
        {
            errorMessage = "Credenciales incorrectas";
            return;
        }

        await authService.SetToken(token.token);
        navigationManager.NavigateTo("/accesorios");
    }
}
